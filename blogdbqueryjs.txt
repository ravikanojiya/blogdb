const Pool = require('pg').Pool
const pool = new Pool({
    user: 'postgres',
    host: 'localhost',
    database: 'blogdb',
    password: 'root',
    port: 5432,
});


const createblog = (req, res) => {
    const { title, id, cid, description, image, is_featured, is_active, created_at } = req.body;
    // console.log("db" + image);
    // console.log("db" + typeof(image));
    // var x=image.valueOf();
    // console.log(x[0]);
    // console.log("dd"+typeof(x[0]));
    pool.query('insert into blogs (title, id, cid, description, image, is_featured, is_active, created_at) values($1,$2,$3,$4,$5,$6,$7,$8)',
        [title, id, cid, description, image[0], is_featured, is_active, created_at], (error, result) => {
            if (error) {
                console.log(error);
            }
            res.status(201).send(`Blog added ...`);

        })
}
const upload = (req, res) => {
    if (!req.file) {
        console.log('No file Recived');
        return res.send({
            success: false
        });
    } else {
        return res.send({
            success: true, name: req.file.filename

        })
    }
}
const addcat = (req, res) => {
    const { category_name } = req.body;
    pool.query('insert into categories (category_name) values($1)', [category_name], (error, result) => {
        if (error) {
            throw error;
        }
        res.status(201).send(`Category added...`);
    })
}
const getUsers = (req, res) => {
    const { name, email } = req.body;
    pool.query('select * from users where name=$1 AND email=$2', [name, email], (error, result) => {
        if (error) {
            console.log(error)
            // res.send({ status: 200, msg: "login denied", data: '' });
        }
        res.send({ status: 201, msg: "login success", data: result.rows });
        console.log(result.rows);
        // console.log(result);


        // res.status(201).send(req.body);
    });
}
const getblogs = (req, res) => {
    pool.query('select * from blogs order by bid asc', (error, result) => {
        if (error) {
            throw error;
        }
        res.status(200).json(result.rows);

    })
}
const deleteblogs = (req, res) => {
    const id = parseInt(req.params.id);
    pool.query('delete from blogs where bid=$1', [id], (error, result) => {
        if (error) {
            throw error;
        }
        res.status(200).send(`Blog deleted${id}`);
    })
}
const getblogbyid = (req, res) => {
    const id = parseInt(rew.params.id);
    pool.query('select * from blogs where bid=$1', [id], (error, result) => {
        if (error) {
            throw error;
        }
        res.status(200).json(result.rows)
    })
}
const getcategory = (req, res) => {
    pool.query('select * from categories order by cid asc', (error, result) => {
        if (error) {
            throw error;
        }
        res.status(200).json(result.rows);
    })
}



module.exports = {
    getUsers,
    createblog, upload, getblogs, deleteblogs, getblogbyid, addcat, getcategory
}